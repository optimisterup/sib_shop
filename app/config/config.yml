imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en
    app.path.product_images: /uploads/images/products
    app.path.category_images: /uploads/images/category
    app.path.user_images: /uploads/images/users
framework:
    #esi: ~
    translator: { fallbacks: [en] } # необходимо включить переводчик для корректного отображения страниц
    templating:
        engines: ['twig']
    secret: '%secret%'
    router:
        resource: '%kernel.project_dir%/app/config/routing.yml'
        strict_requirements: ~
    form: ~
    csrf_protection: ~
    validation: { enable_annotations: true }
    #serializer: { enable_annotations: true }
    default_locale: '%locale%'
    trusted_hosts: ~
    session:
        # https://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id: session.handler.native_file
        save_path: '%kernel.project_dir%/var/sessions/%kernel.environment%'
    fragments: ~
    http_method_override: true
    assets: ~
    php_errors:
        log: true

# Twig Configuration
twig:
    debug: '%kernel.debug%'
    strict_variables: '%kernel.debug%'
    form_themes:
            - 'form_table_layout.html.twig'

# Doctrine Configuration
doctrine:
    dbal:
        driver: pdo_mysql
        host: '%database_host%'
        port: '%database_port%'
        dbname: '%database_name%'
        user: '%database_user%'
        password: '%database_password%'
        charset: UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: '%kernel.project_dir%/var/data/data.sqlite'
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #path: '%database_path%'

    orm:
        auto_generate_proxy_classes: '%kernel.debug%'
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: '%mailer_transport%'
    host: '%mailer_host%'
    username: '%mailer_user%'
    password: '%mailer_password%'
    spool: { type: memory }
    encryption: ssl
    auth_mode: login
    port: 465

fos_user:
    db_driver: orm # указываем что в качестве подключения к БД мы используем orm(Doctrine)
    firewall_name: main # имя которое мы указываем в файле security.yml
    user_class: AppBundle\Entity\User
    from_email:  # этот раздел используется для настройки отправки писем с подтверждением регистрации, он должен быть обязательно подключен
        address: "%mailer_user%"
        sender_name: "%mailer_user%"
    service:
            mailer: fos_user.mailer.twig_swift
    resetting:
        email:
            template:   'email/password_resetting.email.twig'
    registration:
        confirmation:
            template:   '@FOSUser/Registration/email.txt.twig'
easy_admin:
    entities:
        # change the following to the namespaces of your own entities
        Category:
            class: AppBundle\Entity\Category
            list:
                fields:
                    - id
                    - name
                    - description
                    - children
                    - parent
                    - product
            form:
                fields:
                    - name
                    - description
                    - children
                    - parent
                    - product
                    - {property: 'media', type: 'AppBundle\Form\CategoryMediaType'}
        Media:
            class: AppBundle\Entity\Media
            list:
                fields:
                    - id
                    - { property: 'image', type: 'image', base_path: '%app.path.product_images%'}
            form:
                fields:
                    - { property: 'imageFile', type: 'AppBundle\Form\UserMedia'}
            show:
                fields:
                    - { property: 'image', type: 'image', base_path: '%app.path.product_images%' }
        Product:
            class: AppBundle\Entity\Product
            list:
                fields:
                    - id
                    - name
                    - description
                    - price
                    - category
                    - product
                    - media
            form:
                fields:
                    - name
                    - description
                    - price
                    - category
                    - { property: 'media', type: 'collection', type_options: { entry_type: 'AppBundle\Form\ProductMediaType', by_reference: true } }
            show:
                fields:
                    - { property: 'image', type: 'image', base_path: '%app.path.product_images%' }
        Basket:
            class: AppBundle\Entity\Cart
            list:
                fields:
                    - id
                    - userId
                    - productId
                    - order
        User:
              class: AppBundle\Entity\User
              expot_path: '%kernel.root_dir/../var/export/user'
              password_encoding: {algoritm: 'bcrypt'}
              form:
                      fields:
                        - 'username'
                        - 'email'
                        - 'enabled'
                        - {property: 'plainPassword', type: 'password', type_options: {required:false}}
                        - {property: 'roles', type: 'choice', type_options: {multiple: true, choices: {'ROLE_USER': 'ROLE_USER', 'ROLE_ADMIN': 'ROLE_ADMIN' }}}
                        - {property: 'media', type: 'AppBundle\Form\UserMediaType'}
vich_uploader:
    db_driver: orm
    mappings:
        product_images:
            uri_prefix:         '%app.path.product_images%'
            upload_destination: '%kernel.root_dir%/../web/uploads/images/products'
            inject_on_load: false
            delete_on_update: true
            delete_on_remove: true
        category_images:
            uri_prefix:         '%app.path.category_images%'
            upload_destination: '%kernel.root_dir%/../web/uploads/images/category'
        user_images:
            uri_prefix:         '%app.path.user_images%'
            upload_destination: '%kernel.root_dir%/../web/uploads/images/users'

liip_imagine:
      filter_sets:
        # name our filter set "my_watermark_filter"
          my_watermark_filter:
              filters:

                  # use and setup the "watermark" filter
                  watermark:
                      # path to the watermark file (prepended with "%kernel.root_dir%")
                      image: Resources/data/watermark.png
                      # size of the water mark relative to the input image
                      size: 0.3
assetic:
    debug:          '%kernel.debug%'
    use_controller: '%kernel.debug%'
    filters:
        cssrewrite: ~
